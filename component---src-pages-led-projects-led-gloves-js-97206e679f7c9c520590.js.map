{"version":3,"file":"component---src-pages-led-projects-led-gloves-js-97206e679f7c9c520590.js","mappings":"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","sources":["webpack://personal-website/./src/components/external-links.js","webpack://personal-website/./src/images/led-gloves/text_pattern.gif","webpack://personal-website/./src/images/led-gloves/eyes_pattern.gif","webpack://personal-website/./src/images/led-gloves/strobe_pattern.gif","webpack://personal-website/./src/pages/led-projects/led-gloves.js","webpack://personal-website/./node_modules/react-bootstrap/esm/FigureImage.js","webpack://personal-website/./node_modules/react-bootstrap/esm/FigureCaption.js","webpack://personal-website/./node_modules/react-bootstrap/esm/Figure.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { OutboundLink } from \"gatsby-plugin-google-gtag\"\n\nimport { Card, Row, Col, Image } from \"react-bootstrap\"\n\nconst ExternalLink = ({ href, text }) => (\n  <OutboundLink href={href} target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: \"none\" }}>\n    <h4 align=\"center\">{text}</h4>\n  </OutboundLink>\n)\n\nconst ExternalCard = ({ url, title, siteName, description, images, favicons, imgStyle, cardStyle }) => (\n  <Card\n    style={{\n      position: \"relative\",\n      maxWidth: \"500px\",\n      ...cardStyle,\n    }}\n  >\n    {siteName ? <Card.Header className=\"text-center\">{siteName}</Card.Header> : \"\"}\n    <Row>\n      <Col>\n        <Card.Body>\n          <Row>\n            <Col xs={2} align=\"center\" className=\"align-self-center\">\n              <img src={favicons[0]} alt=\"\" width=\"100%\" />\n            </Col>\n            <Col sm={10}>\n              <Card.Title>{title}</Card.Title>\n            </Col>\n            <Card.Subtitle>{description.substring(0, 100)}</Card.Subtitle>\n          </Row>\n        </Card.Body>\n      </Col>\n      {images.length !== 0 ? (\n        <Col sm={4} md={4} lg={4}>\n          <Image src={images[0]} style={{ width: \"100%\", height: \"100%\", ...imgStyle }} alt=\"\"></Image>\n        </Col>\n      ) : (\n        \"\"\n      )}\n    </Row>\n    <Card.Footer className=\"text-muted text-center\">{url}</Card.Footer>\n    <OutboundLink href={url} target=\"_blank\" rel=\"noreferrer\" className=\"stretched-link\"></OutboundLink>\n  </Card>\n)\n\nExternalCard.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  siteName: PropTypes.string,\n  description: PropTypes.string,\n  images: PropTypes.arrayOf(PropTypes.string),\n  favicons: PropTypes.arrayOf(PropTypes.string),\n  imgStyle: PropTypes.object,\n  cardStyle: PropTypes.object,\n}\n\nExternalCard.defaultProps = {\n  url: \"\",\n  title: \"\",\n  siteName: \"\",\n  description: \"\",\n  images: [],\n  favicons: [],\n  imgStyle: {},\n  cardStyle: {},\n}\n\nexport { ExternalLink, ExternalCard }\n","export default __webpack_public_path__ + \"static/text_pattern-0549532fe804065cd7ce3908100740ed.gif\";","export default __webpack_public_path__ + \"static/eyes_pattern-cd32cd4cfe95bd7280813269d5653a52.gif\";","export default __webpack_public_path__ + \"static/strobe_pattern-7e0bc894182709e6788f10b8b17a0cd1.gif\";","import * as React from \"react\"\nimport { Row, Col, Figure } from \"react-bootstrap\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport { LayoutWithToc } from \"../../components/layout\"\nimport { ExternalCard } from \"../../components/external-links\"\nimport Seo from \"../../components/seo\"\nimport pageLinks from \"../../data/site-pages\"\nimport { FlickrAlbum } from \"../../components/embed\"\n\nimport textGif from \"../../images/led-gloves/text_pattern.gif\"\nimport eyeGif from \"../../images/led-gloves/eyes_pattern.gif\"\nimport strobeGif from \"../../images/led-gloves/strobe_pattern.gif\"\n\nconst page = pageLinks[\"ledgloves\"]\n\nconst gifstyle = {\n  width: \"100%\",\n  minWidth: \"150px\",\n  maxWidth: \"500px\",\n  marginBottom: \"15px\",\n  borderRadius: \"30px\",\n}\n\nconst SitePage = ({ pageContext }) => (\n  <LayoutWithToc page={page}>\n    <h2 className=\"my-3\">Overview</h2>\n\n    <Row>\n      <Col>\n        I always wanted to have light-up gloves with solid panels, that I could customiize with patterns and would be\n        lightweight to wear -- so I made them myself!\n      </Col>\n      <Col>\n        <img src={textGif} style={gifstyle} alt=\"\" />\n      </Col>\n    </Row>\n\n    <h2 className=\"my-3\">The LED Panel</h2>\n\n    <Row xs={1} sm={1} md={2}>\n      <Col>\n        <ExternalCard {...pageContext.linkPreviewData[0]} imgStyle={{ maxHeight: \"200px\" }} />\n      </Col>\n      <Col>\n        Normally I would have made the panel myself: buying an LED matrix, cutting it down to size, finding an\n        appropriately small microcontroller with bluetooth/wifi capability, programming it, finding and assembling a\n        small power source, adding a button, and voila! However, I also decided to apply my programmer's mentality to\n        this problem, aka -- if there exists what I need, in the form that I need it, jsut use that instead of making it\n        again. So I did! I found reasonably priced panels that not only were sized perfectly, but also had a\n        great-and-tiny power source, and an app that came with them to control the LEDs to boot! The app allows for\n        using text, images, premade animations, or making your own animations. I was never planning on making an app so\n        that was an upgrade already! Check out the panels, which can be found on Etsy.\n      </Col>\n    </Row>\n\n    <h3 className=\"my-3\">Some Patterns</h3>\n\n    <Row>\n      <Col>\n        <img src={textGif} style={gifstyle} alt=\"\" />\n      </Col>\n      <Col>\n        <img src={eyeGif} style={gifstyle} alt=\"\" />\n      </Col>\n      <Col>\n        <img src={strobeGif} style={gifstyle} alt=\"\" />\n      </Col>\n    </Row>\n\n    <h2 className=\"my-3\">Assembly</h2>\n\n    <Row md={3} xs={1}>\n      <Col>\n        I sewed clear vinyl onto some fingerless gloves, scooched the panels into the vinyl, and closed off the pouch\n        with a velcro end {\"(so that I could remove the panel if ever needed, for washing the gloves etc)\"}. The\n        controller and battery pack are small, so they simply tuck into the glove hand to stay out the way. My hand are\n        still perfectly functional/usable with that! The buttom to turn on the gloves is also easily accessible that\n        way.\n      </Col>\n      <Col>\n        <StaticImage\n          src=\"https://live.staticflickr.com/65535/52530982185_210136fbcc_b.jpg\"\n          alt=\"LED gloves\"\n          style={{ marginBottom: \"2rem\" }}\n        />\n      </Col>\n      <Col>\n        <Figure>\n          <StaticImage\n            src=\"https://live.staticflickr.com/65535/52531054178_059ece2e2b_b.jpg\"\n            alt=\"LED gloves\"\n            style={{ marginBottom: \"2rem\" }}\n          />\n          <Figure.Caption>The velcro seal, with the controller+battery tucked inside the glove</Figure.Caption>\n        </Figure>\n      </Col>\n    </Row>\n\n    <FlickrAlbum\n      href=\"https://www.flickr.com/photos/135898386@N03/albums/72177720304071058\"\n      imgSrc=\"https://live.staticflickr.com/65535/52530042492_bea968eea1_c.jpg\"\n      title=\"LED Gloves\"\n    />\n  </LayoutWithToc>\n)\n\nexport const Head = () => <Seo {...page} />\n\nexport default SitePage\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport Image, { propTypes as imagePropTypes } from './Image';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FigureImage = /*#__PURE__*/React.forwardRef(({\n  className,\n  fluid = true,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Image, {\n  ref: ref,\n  ...props,\n  fluid: fluid,\n  className: classNames(className, 'figure-img')\n}));\nFigureImage.displayName = 'FigureImage';\nFigureImage.propTypes = imagePropTypes;\nexport default FigureImage;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FigureCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'figcaption',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'figure-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFigureCaption.displayName = 'FigureCaption';\nexport default FigureCaption;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport FigureImage from './FigureImage';\nimport FigureCaption from './FigureCaption';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Figure = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'figure',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'figure');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFigure.displayName = 'Figure';\nexport default Object.assign(Figure, {\n  Image: FigureImage,\n  Caption: FigureCaption\n});"],"names":["ExternalCard","_ref2","url","title","siteName","description","images","favicons","imgStyle","cardStyle","React","Card","style","Object","assign","position","maxWidth","Header","className","Row","Col","Body","xs","align","src","alt","width","sm","Title","Subtitle","substring","length","md","lg","Image","height","Footer","OutboundLink","href","target","rel","defaultProps","page","pageLinks","gifstyle","minWidth","marginBottom","borderRadius","Head","Seo","_ref","pageContext","LayoutWithToc","textGif","linkPreviewData","maxHeight","eyeGif","strobeGif","StaticImage","__imageData","require","Figure","Caption","FlickrAlbum","imgSrc","FigureImage","fluid","props","ref","displayName","propTypes","FigureCaption","bsPrefix","as","Component"],"sourceRoot":""}